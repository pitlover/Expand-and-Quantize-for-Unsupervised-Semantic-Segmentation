save_dir: "output"
wandb:
  project: "Jigmentation"
  mode: "online"
  name: "PQGO_gumbel_l2_cityscapes"
  notes: ""
  tags_dataset: ${dataset_name}
  tags_model: ${model.pretrained.model_type}
# ---------------------------------------------------------------- #
seed: 10
num_classes: 27                           # TODO need to fix per dataset
dataset_name: "cityscapes"                     # "pascal", "potsdam", "cityscapes", "cocostuff27", "cocostuff3", "cocostuff15"
data_dir: "../Datasets/cityscapes"
is_visualize: false                           # default false, true
visualize_path: "./visualize/tmp/crfX"
# ---------------------------------------------------------------- #
resume:
  checkpoint: null                      # default null

# ---------------------------------------------------------------- #
model:
  pretrained:
    model_type: "vit_base"                    # "vit_base", "vit_small"
    dino_patch_size: 8
    freeze_backbone: true
    dropout: true
    drop_prob: 0.1
    pretrained_weights: null
  last_norm: false
  dec_num_blocks: 3

  vq:
    vq_type: "param"                          # "ema", "param"
    num_codebooks: [ 32 ]
    embed_dims: [ 1024 ]
    beta: 0.25
    book: 1.0
    normalize: "l2"                           # l2, z_norm, z_trainable, none
    use_restart: false                        # default false, true
    use_split: false                        # default false, true
    use_weighted_sum: false                   # default false, true
    use_gumbel: true                   # default false, true
    need_initialized: "uni"                   # default none : kmeans, uni, normal, rand
    pq_dropout: 0.0                         # default(ratio of pq mask) : 0.0,
    decay: 0.99
    eps: 1.0e-6
    num_pq: [ 32 ]             # 64               # 1 for vq
    agg_type: "concat"                        # add, concat

# ---------------------------------------------------------------- #
loss:
  stego_weight: 1.0
  vq_weight: 1.0
  info_nce_weight: 0.0
  jsd_weight: 0.0
  margin_weight: 0.0
  mse_weight: 0.0

  info_nce:
    normalize: "l2"
    neg_sample: 10                           # TODO need check
    temperature: 1.0                          # TODO need check
    cal_type: "cosine"                      # TODO need check "distance" "cosine" "random"
  jsd:
    num_query: 7
    num_pos: 10
    temperature: 0.1 # TODO need check
  stego:
    # cocostuff27 with vit-small
    #    neg_inter_weight: 0.63
    #    pos_inter_weight: 0.25
    #    pos_intra_weight: 0.67
    #    neg_inter_shift: 0.66
    #    pos_inter_shift: 0.02
    #    pos_intra_shift: 0.08

    # cocostuff27 with vit-base
    #    neg_inter_weight: 0.15
    #    pos_inter_weight: 1
    #    pos_intra_weight: 0.1
    #    neg_inter_shift: 1.
    #    pos_inter_shift: 0.2
    #    pos_intra_shift: 0.1

    # cityscapes with vit-small
    #        neg_inter_weight: 0.95
    #        pos_inter_weight: 0.43
    #        pos_intra_weight: 1.00
    #        neg_inter_shift: 0.31
    #        pos_inter_shift: 0.22
    #        pos_intra_shift: 0.36

    # cityscapes with vit-base
    neg_inter_weight: 0.95
    pos_inter_weight: 0.43
    pos_intra_weight: 1.0
    neg_inter_shift: 0.31
    pos_inter_shift: 0.22
    pos_intra_shift: 0.36


    # potsdam with vit-small
    #    neg_inter_weight: 0.63
    #    pos_inter_weight: 0.25
    #    pos_intra_weight: 0.67
    #    neg_inter_shift: 0.46
    #    pos_inter_shift: 0.02
    #    pos_intra_shift: 0.08

    # potsdam with vit-base
#    neg_inter_weight: 0.63
#    pos_inter_weight: 0.25
#    pos_intra_weight: 0.67
#    neg_inter_shift: 0.26
#    pos_inter_shift: 0.12
#    pos_intra_shift: 0.21

    zero_clamp: true
    pointwise: true
    stabilize: false
    feature_samples: 11
    neg_samples: 5


# ---------------------------------------------------------------- #
dataset:
  train:
    data_dir: ${data_dir}
    dataset_name: ${dataset_name}
    model_type: ${model.pretrained.model_type}
    crop_type: "five"                 # null, "five"
    crop_ratio: 0.5
    loader_crop_type: "center"
    num_neighbors: 7
    res: 224
  val:
    data_dir: ${data_dir}
    dataset_name: ${dataset_name}
    model_type: ${model.pretrained.model_type}
    crop_type: null
    loader_crop_type: "center"                # none for voc
    res: 320

dataloader:
  train:
    batch_size: 16  # total
    num_workers: 8  # total
  val:
    batch_size: 8  # total
    num_workers: 8  # total
    is_visualize: ${is_visualize}

# ---------------------------------------------------------------- #
optimizer:
  model:
    name: "adam"
    lr: 3.0e-4
    weight_decay: 0.0
  cluster:
    name: "adam"
    lr: 3.0e-3
  linear:
    name: "adam"
    lr: 3.0e-3

# ---------------------------------------------------------------- #
scheduler:
  model:
    name: "constant"  # default "constant", "cos",
  cluster:
    name: "constant"
  linear:
    name: "constant"

# ---------------------------------------------------------------- #
eval:
  output_type: "vq0" # TODO changed to vq0 -> for vq
  extra_classes: 0

# ---------------------------------------------------------------- #
train:
  max_epochs: 15
  print_interval_iters: 25
  valid_interval_iters: 75
  clip_grad: 10.0      # default 1.0
  num_accum: 1